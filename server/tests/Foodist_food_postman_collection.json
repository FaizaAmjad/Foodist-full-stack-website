{
	"info": {
		"_postman_id": "b0380787-aeeb-4c63-99a5-355df8caea80",
		"name": "Foodist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29427023",
		"_collection_link": "https://universal-firefly-249996.postman.co/workspace/Group-18-Workspace~893c8134-8c99-4aef-8880-b53e52b0d27b/collection/29427023-b0380787-aeeb-4c63-99a5-355df8caea80?action=share&source=collection_link&creator=29427023"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "All users",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Remover user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Food",
			"item": [
				{
					"name": "Food List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful Get request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.success).to.exist;\r",
									"    pm.expect(responseData.msg).to.exist;\r",
									"    pm.expect(responseData.data).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Success field is a boolean\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.success).to.be.a('boolean');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"The msg field should be a non-empty string\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.msg).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Data field is an array\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.data).to.be.an('array');\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/joey/food-items/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"joey",
								"food-items",
								""
							],
							"query": [
								{
									"key": "username",
									"value": "65087c26b1a51173d7355834",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Food Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"POST request: New food item is stored.\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"The data field is an object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.data).to.be.an('object');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"cheez\",\r\n    \"description\": \"yummy\",\r\n    \"expiryDate\" : \"2024-04-03\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/joey/food-items/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"joey",
								"food-items",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Food By name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('success');\r",
									"    pm.expect(responseData).to.have.property('msg');\r",
									"    pm.expect(responseData).to.have.property('data');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Success is a boolean value\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.success).to.be.a('boolean');\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is in an acceptable range\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"The data field is an object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.data).to.be.an('object');\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/joey/food-items/cheez",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"joey",
								"food-items",
								"cheez"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace Food By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate the success field\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.success).to.exist.and.to.be.a('boolean');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"The data field is an object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.data).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the msg field\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.msg).to.exist.and.to.be.a('string');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Cabage\",\r\n    \"descriptipon\": \" yellow\",\r\n    \"expiryDate\": \"2023-01-23\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/joey/food-items/cheez",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"joey",
								"food-items",
								"cheez"
							],
							"query": [
								{
									"key": "username",
									"value": "joey",
									"disabled": true
								},
								{
									"key": "name",
									"value": "Onion",
									"disabled": true
								},
								{
									"key": "description",
									"value": "yellow onion",
									"disabled": true
								},
								{
									"key": "expiryDate",
									"value": "2023-09-23",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Food By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate the success field is true\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that data field is present in the response\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.data).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"The data field is an object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.data).to.be.an('object');\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Big Cabage\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/joey/food-items/Cabage",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"joey",
								"food-items",
								"Cabage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Food By Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Success field should be a boolean\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.success).to.be.a('boolean');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"The msg field should be a string\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData.msg).to.be.a('string');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/v1/users/joey/food-items/cheez",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"joey",
								"food-items",
								"cheez"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Success field is present in the response\", function () {",
									"  pm.expect(pm.response.json()).to.have.property(\"success\");",
									"});",
									"",
									"",
									"pm.test(\"The success field is a boolean value\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.success).to.be.a('boolean');",
									"});",
									"",
									"",
									"pm.test(\"The 'msg' field is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.msg).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"The msg field should be a string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.msg).to.be.a('string');",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/joey/food-items/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"joey",
								"food-items",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}